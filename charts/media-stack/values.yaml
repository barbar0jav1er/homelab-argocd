global:
  namespace: media
  storageClass: ""
  
nfs:
  server: "10.2.0.20"
  path: "/volume2/media"
  capacity: "10Ti"

jellyfin:
  enabled: true
  image:
    repository: jellyfin/jellyfin
    tag: "10.8.13"
  service:
    type: ClusterIP
    port: 8096
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 2000m
      memory: 4Gi
  ingress:
    enabled: false
    host: jellyfin.local

radarr:
  enabled: true
  image:
    repository: linuxserver/radarr
    tag: "5.2.6"
  service:
    type: ClusterIP
    port: 7878
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi

sonarr:
  enabled: true
  image:
    repository: linuxserver/sonarr
    tag: "4.0.0"
  service:
    type: ClusterIP
    port: 8989
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi

jellyseerr:
  enabled: true
  image:
    repository: fallenbagel/jellyseerr
    tag: "1.7.0"
  service:
    type: ClusterIP
    port: 5055
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

prowlarr:
  enabled: true
  image:
    repository: linuxserver/prowlarr
    tag: "1.11.4"
  service:
    type: ClusterIP
    port: 9696
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

qbittorrent:
  enabled: true
  image:
    repository: linuxserver/qbittorrent
    tag: "4.6.2"
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  env:
    WEBUI_PORT: "8080"
  # Use an existing secret for credentials (optional)
  existingSecret:
    name: "qbittorrent-credentials"  # Name of existing secret containing username and password
    usernameKey: "username"  # Key in secret for username
    passwordKey: "password"  # Key in secret for password

# Ingress configuration
ingress:
  enabled: true
  className: "traefik"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
  
  # TLS configuration
  tls:
    - hosts:
        - jellyfin.v2.cubancodelab.net
        - radarr.v2.cubancodelab.net
        - sonarr.v2.cubancodelab.net
        - requests.v2.cubancodelab.net
        - prowlarr.v2.cubancodelab.net
        - qbittorrent.v2.cubancodelab.net
      secretName: media-stack-tls
  
  # Individual service ingress configuration
  jellyfin:
    enabled: true
    host: jellyfin.v2.cubancodelab.net
    path: /
    pathType: Prefix
  
  radarr:
    enabled: true
    host: radarr.v2.cubancodelab.net
    path: /
    pathType: Prefix
  
  sonarr:
    enabled: true
    host: sonarr.v2.cubancodelab.net
    path: /
    pathType: Prefix
  
  jellyseerr:
    enabled: true
    host: requests.v2.cubancodelab.net
    path: /
    pathType: Prefix
  
  prowlarr:
    enabled: true
    host: prowlarr.v2.cubancodelab.net
    path: /
    pathType: Prefix
  
  qbittorrent:
    enabled: true
    host: qbittorrent.v2.cubancodelab.net
    path: /
    pathType: Prefix