# Global values for the media stack
global:
  domain: cubancodelab.net
  storageClass: "nfs-ssd-fast"
  timezone: "Asia/Dubai"
  puid: "1000"
  pgid: "1000"
  
# Shared media PVC configuration
sharedMedia:
  enabled: true
  existingClaim: "shared-media-pvc"
  size: "1Ti"
  storageClass: "nfs-hdd-bulk"

# Jellyfin - Media server
jellyfin:
  enabled: true
  nameOverride: ""
  fullnameOverride: ""
  replicaCount: 1
  
  image:
    repository: jellyfin/jellyfin
    tag: "10.10.7"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8096
  
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    hosts:
      - host: jellyfin.cubancodelab.net
        paths:
          - path: /
            pathType: Prefix
    tls: []
  
  persistence:
    config:
      enabled: true
      storageClass: "nfs-ssd-fast"
      accessMode: ReadWriteOnce
      size: 5Gi
    
    cache:
      enabled: true
      storageClass: "nfs-ssd-fast"
      accessMode: ReadWriteOnce
      size: 10Gi
    
    media:
      enabled: true
      storageClass: ""
      accessMode: ReadWriteMany
      size: 100Gi
      existingClaim: "shared-media-pvc"
  
  env:
    JELLYFIN_PublishedServerUrl: "https://jellyfin.cubancodelab.net"
    
  extraEnv: []
  
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    runAsNonRoot: true
  
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
      gpu.intel.com/i915: 1
    requests:
      cpu: 500m
      memory: 1Gi
      gpu.intel.com/i915: 1
  
  hardwareAcceleration:
    enabled: true
    type: "intel"
    intel:
      enableDevices: true
      renderGroup: 993
  
  healthChecks:
    liveness:
      enabled: true
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    
    readiness:
      enabled: true
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
    
    startup:
      enabled: true
      httpGet:
        path: /health
        port: http
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
  
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  
  nodeSelector:
    gpu.intel.com/device-id.0300-46a6.present: "true"

# Jellyseerr - Request management for Plex/Jellyfin
jellyseerr:
  enabled: true

  service:
    type: ClusterIP
    port: 5055
  
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    hosts:
      - host: jellyseerr.cubancodelab.net
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - jellyseerr.cubancodelab.net
        secretName: jellyseerr-tls
  
  persistence:
    config:
      enabled: true
      storageClass: "nfs-ssd-fast"
      accessMode: ReadWriteOnce
      size: 2Gi

# Radarr - Movie management
radarr:
  enabled: true 
  
  env:
    PUID: "1000"
    PGID: "1000"
    TZ: "Asia/Dubai"
  
  service:
    type: ClusterIP
    port: 7878
  
ingress:
  enabled: true
  className: "traefik"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
  host: radarr.cubancodelab.net
  tls:
    enabled: true
    secretName: radarr-tls
  
  persistence:
    config:
      enabled: true
      size: 2Gi
      storageClass: "nfs-ssd-fast"
    media:
      enabled: true
      existingClaim: "shared-media-pvc"
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Sonarr - TV series management
sonarr:
  enabled: true
  
  env:
    PUID: "1000"
    PGID: "1000"
    TZ: "Asia/Dubai"
  
  service:
    type: ClusterIP
    port: 8989
  
  ingress:
    enabled: true
    className: "traefik"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    host: sonarr.cubancodelab.net
    tls:
      enabled: true
      secretName: sonnar-tls
  
  persistence:
    config:
      enabled: true
      size: 2Gi
      storageClass: "nfs-ssd-fast"
    media:
      enabled: true
      existingClaim: "shared-media-pvc"
  
# Prowlarr - Indexer manager
prowlarr:
  enabled: true
  
  image:
    repository: linuxserver/prowlarr
    tag: latest
    pullPolicy: IfNotPresent
  
  env:
    PUID: "1000"
    PGID: "1000"
    TZ: "Asia/Dubai"
  
  service:
    type: ClusterIP
    port: 9696
  
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    host: prowlarr.cubancodelab.net
    tls:
      enabled: true
      secretName: prowlarr-tls
  
  persistence:
    config:
      enabled: true
      size: 1Gi
      storageClass: "nfs-ssd-fast"
  
# qBittorrent - Torrent client
qbittorrent:
  enabled: false
  nameOverride: ""
  fullnameOverride: ""
  replicaCount: 1
  
  image:
    repository: linuxserver/qbittorrent
    tag: latest
    pullPolicy: IfNotPresent
  
  env:
    PUID: "1000"
    PGID: "1000"
    TZ: "Asia/Dubai"
    WEBUI_PORT: "8080"
  
  service:
    type: ClusterIP
    port: 8080
  
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
      traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    host: qbittorrent.dev.cubancodelab.net
    tls:
      enabled: false
      secretName: qbittorrent-dev-tls
  
  persistence:
    config:
      enabled: true
      size: 2Gi
      storageClass: "nfs-ssd-fast"
    downloads:
      enabled: true
      existingClaim: "shared-media-pvc"
      subPath: "downloads"
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi

# Flaresolverr - Cloudflare solver
flaresolverr:
  enabled: true
  
  service:
    type: ClusterIP
    port: 8191
  
  ingress:
    enabled: false
  
# Bazarr - Subtitle management
bazarr:
  enabled: true
 
  env:
    PUID: "1000"
    PGID: "1000"
    TZ: "Asia/Dubai"
  
  service:
    type: ClusterIP
    port: 6767
  
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    host: qbittorrent.dev.cubancodelab.net
    tls:
      enabled: true
      secretName: bazarr-tls
  
  persistence:
    config:
      enabled: true
      size: 1Gi
      storageClass: "nfs-ssd-fast"
    media:
      enabled: true
      existingClaim: "shared-media-pvc"
      subPath: ""